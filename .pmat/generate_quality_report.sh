#!/bin/bash
# Generate Comprehensive Quality Report
# Creates detailed quality metrics for INTEGRATION.md

set -e

echo "ðŸ“Š Generating Quality Report"
echo "============================"
echo ""

REPORT_FILE="quality_report_$(date +%Y%m%d_%H%M%S).md"

cat > "$REPORT_FILE" <<EOF
# RuchyRuchy Quality Report
**Generated**: $(date)
**Ruchy Version**: $(ruchy --version 2>/dev/null | head -1 || echo "unknown")

---

## Bootstrap Stage Quality

EOF

# Analyze each bootstrap stage
for stage in stage0 stage1 stage2 stage3; do
    if [ -d "bootstrap/$stage" ]; then
        echo "### $stage" >> "$REPORT_FILE"
        echo "" >> "$REPORT_FILE"

        # Count files
        FILE_COUNT=$(find "bootstrap/$stage" -name "*.ruchy" | wc -l)
        echo "- **Files**: $FILE_COUNT" >> "$REPORT_FILE"

        # Line count
        LOC=$(find "bootstrap/$stage" -name "*.ruchy" -exec wc -l {} \; | awk '{sum+=$1} END {print sum}')
        echo "- **Lines of Code**: $LOC" >> "$REPORT_FILE"

        # TDG Score (if available)
        if command -v pmat >/dev/null 2>&1; then
            SCORE=$(pmat tdg "bootstrap/$stage" --quiet 2>/dev/null || echo "N/A")
            echo "- **TDG Score**: $SCORE" >> "$REPORT_FILE"
        fi

        # SATD count
        SATD=$(find "bootstrap/$stage" -name "*.ruchy" -exec grep -c "TODO\|FIXME\|HACK" {} \; 2>/dev/null | awk '{sum+=$1} END {print sum}' || echo "0")
        echo "- **SATD Comments**: $SATD" >> "$REPORT_FILE"
        echo "" >> "$REPORT_FILE"
    fi
done

cat >> "$REPORT_FILE" <<EOF

---

## Validation Infrastructure Quality

EOF

# Analyze validation files
if [ -d "validation" ]; then
    echo "### Core Validation Files" >> "$REPORT_FILE"
    echo "" >> "$REPORT_FILE"

    VALIDATION_COUNT=$(find validation -name "*.ruchy" -maxdepth 1 | wc -l)
    echo "- **Validation Files**: $VALIDATION_COUNT" >> "$REPORT_FILE"

    VALIDATION_LOC=$(find validation -name "*.ruchy" -maxdepth 1 -exec wc -l {} \; | awk '{sum+=$1} END {print sum}')
    echo "- **Total LOC**: $VALIDATION_LOC" >> "$REPORT_FILE"

    if command -v pmat >/dev/null 2>&1; then
        VALIDATION_SCORE=$(pmat tdg validation/ --quiet 2>/dev/null || echo "N/A")
        echo "- **TDG Score**: $VALIDATION_SCORE" >> "$REPORT_FILE"
    fi

    echo "" >> "$REPORT_FILE"
fi

cat >> "$REPORT_FILE" <<EOF

---

## Overall Project Metrics

EOF

# Overall metrics
TOTAL_FILES=$(find bootstrap validation -name "*.ruchy" 2>/dev/null | wc -l)
TOTAL_LOC=$(find bootstrap validation -name "*.ruchy" -exec wc -l {} \; 2>/dev/null | awk '{sum+=$1} END {print sum}')
TOTAL_SATD=$(find bootstrap validation -name "*.ruchy" -exec grep -c "TODO\|FIXME\|HACK" {} \; 2>/dev/null | awk '{sum+=$1} END {print sum}' || echo "0")

cat >> "$REPORT_FILE" <<EOF
- **Total .ruchy Files**: $TOTAL_FILES
- **Total Lines of Code**: $TOTAL_LOC
- **Total SATD Comments**: $TOTAL_SATD
- **SATD Density**: $(echo "scale=4; $TOTAL_SATD / $TOTAL_LOC * 1000" | bc 2>/dev/null || echo "N/A") per KLOC

EOF

if command -v pmat >/dev/null 2>&1; then
    OVERALL_SCORE=$(pmat tdg . --quiet 2>/dev/null || echo "N/A")
    cat >> "$REPORT_FILE" <<EOF
- **Overall TDG Score**: $OVERALL_SCORE

EOF
fi

cat >> "$REPORT_FILE" <<EOF

---

*Report generated by .pmat/generate_quality_report.sh*
EOF

echo "âœ… Quality report generated: $REPORT_FILE"
cat "$REPORT_FILE"
