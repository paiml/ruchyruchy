{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Ruchy",
  "scopeName": "source.ruchy",
  "patterns": [
    { "include": "#comments" },
    { "include": "#keywords" },
    { "include": "#strings" },
    { "include": "#numbers" },
    { "include": "#functions" },
    { "include": "#types" },
    { "include": "#operators" }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.ruchy",
          "begin": "//",
          "end": "$"
        },
        {
          "name": "comment.block.ruchy",
          "begin": "/\\*",
          "end": "\\*/"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.ruchy",
          "match": "\\b(if|else|match|loop|while|for|in|break|continue|return)\\b"
        },
        {
          "name": "keyword.declaration.ruchy",
          "match": "\\b(fun|let|type|struct|enum|trait|impl)\\b"
        },
        {
          "name": "keyword.other.ruchy",
          "match": "\\b(mut|pub|use|mod|as|where)\\b"
        },
        {
          "name": "constant.language.ruchy",
          "match": "\\b(true|false|None|Some)\\b"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.ruchy",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.ruchy",
              "match": "\\\\(n|r|t|\\\\|\"|'|x[0-9A-Fa-f]{2}|u\\{[0-9A-Fa-f]+\\})"
            }
          ]
        },
        {
          "name": "string.quoted.single.ruchy",
          "begin": "'",
          "end": "'",
          "patterns": [
            {
              "name": "constant.character.escape.ruchy",
              "match": "\\\\(n|r|t|\\\\|\"|'|x[0-9A-Fa-f]{2})"
            }
          ]
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.hex.ruchy",
          "match": "\\b0x[0-9A-Fa-f]+\\b"
        },
        {
          "name": "constant.numeric.binary.ruchy",
          "match": "\\b0b[01]+\\b"
        },
        {
          "name": "constant.numeric.octal.ruchy",
          "match": "\\b0o[0-7]+\\b"
        },
        {
          "name": "constant.numeric.decimal.ruchy",
          "match": "\\b\\d+(\\.\\d+)?([eE][+-]?\\d+)?\\b"
        }
      ]
    },
    "functions": {
      "patterns": [
        {
          "name": "entity.name.function.ruchy",
          "match": "\\b([a-z_][a-zA-Z0-9_]*)\\s*(?=\\()"
        },
        {
          "name": "entity.name.function.definition.ruchy",
          "match": "(?<=fun\\s+)([a-z_][a-zA-Z0-9_]*)"
        }
      ]
    },
    "types": {
      "patterns": [
        {
          "name": "entity.name.type.ruchy",
          "match": "\\b([A-Z][a-zA-Z0-9_]*)\\b"
        },
        {
          "name": "storage.type.ruchy",
          "match": "\\b(i8|i16|i32|i64|u8|u16|u32|u64|f32|f64|bool|str|String)\\b"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.comparison.ruchy",
          "match": "(==|!=|<|>|<=|>=)"
        },
        {
          "name": "keyword.operator.logical.ruchy",
          "match": "(&&|\\|\\||!)"
        },
        {
          "name": "keyword.operator.arithmetic.ruchy",
          "match": "(\\+|-|\\*|/|%)"
        },
        {
          "name": "keyword.operator.assignment.ruchy",
          "match": "(=|\\+=|-=|\\*=|/=|%=)"
        },
        {
          "name": "keyword.operator.other.ruchy",
          "match": "(->|=>|::|\\.|,|;|:)"
        }
      ]
    }
  }
}
