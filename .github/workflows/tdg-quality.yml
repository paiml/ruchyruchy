name: PMAT TDG Quality Enforcement

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  tdg-quality:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Full history for baseline comparison

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Cache PMAT
        uses: actions/cache@v3
        with:
          path: ~/.cargo/bin/pmat
          key: ${{ runner.os }}-pmat-2.180.1

      - name: Install PMAT
        run: |
          if ! command -v pmat &> /dev/null; then
            cargo install pmat --version 2.180.1
          fi
          pmat --version

      - name: Check TDG Baseline Exists
        run: |
          if [ ! -f .pmat/tdg-baseline.json ]; then
            echo "‚ùå ERROR: TDG baseline not found"
            echo "Run: pmat tdg baseline create --output .pmat/tdg-baseline.json --path src/"
            exit 1
          fi
          echo "‚úÖ TDG baseline found"

      - name: Run TDG Regression Check
        id: tdg-check
        run: |
          echo "üîç Running TDG regression check..."
          pmat tdg check-regression \
            --baseline .pmat/tdg-baseline.json \
            --path src/ \
            --verbose \
            --format text > tdg-report.txt 2>&1 || true

          cat tdg-report.txt

          # Check exit status
          if pmat tdg check-regression --baseline .pmat/tdg-baseline.json --path src/; then
            echo "‚úÖ TDG check passed"
            echo "status=passed" >> $GITHUB_OUTPUT
          else
            echo "‚ö†Ô∏è TDG check failed"
            echo "status=failed" >> $GITHUB_OUTPUT
          fi

      - name: Analyze New Files
        if: github.event_name == 'pull_request'
        run: |
          echo "üîç Checking new files in PR..."
          git diff --name-only --diff-filter=A origin/main...HEAD | grep '\.rs$' | while read file; do
            if [ -f "$file" ]; then
              echo "Analyzing new file: $file"
              pmat tdg "$file" --verbose || true
            fi
          done

      - name: Post PR Comment
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('tdg-report.txt', 'utf8');

            const comment = `## üîç RuchyRuchy TDG Quality Report

            **PMAT Version**: v2.180.1
            **Baseline**: \`.pmat/tdg-baseline.json\`
            **Status**: ${{ steps.tdg-check.outputs.status }}

            <details>
            <summary>Click to view full report</summary>

            \`\`\`
            ${report}
            \`\`\`

            </details>

            ---

            **Quality Standards**:
            - Minimum Grade: B+ (configured in \`.pmat/tdg-rules.toml\`)
            - Max Score Drop: 5.0 points
            - Mode: Warning (will switch to strict enforcement in Week 4)

            **Baseline Score**: 95.2 (A+ grade)

            *Generated by PMAT TDG Enforcement System v2.180.1*
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

      - name: Update Baseline (main branch only)
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          echo "üìä Updating TDG baseline for main branch..."
          pmat tdg baseline create \
            --output .pmat/tdg-baseline.json \
            --path src/

          # Check if baseline changed
          if git diff --quiet .pmat/tdg-baseline.json; then
            echo "‚úÖ No baseline changes"
          else
            echo "üìù Baseline updated"
            git config user.name "PMAT TDG Bot"
            git config user.email "pmat-tdg@paiml.com"
            git add .pmat/tdg-baseline.json
            git commit -m "chore: Update TDG baseline (automated)" || true
            # Note: Push disabled for now (requires write permissions)
            # git push || echo "‚ö†Ô∏è Could not push baseline update"
          fi

      - name: Fail on Regression (strict mode)
        if: steps.tdg-check.outputs.status == 'failed'
        run: |
          MODE=$(grep '^mode' .pmat/tdg-rules.toml | cut -d'"' -f2)
          echo "Enforcement mode: $MODE"

          if [ "$MODE" = "strict" ]; then
            echo "‚ùå TDG regression detected in strict mode - failing build"
            exit 1
          else
            echo "‚ö†Ô∏è TDG regression detected in warning mode - build continues"
            echo "Switch to strict mode in .pmat/tdg-rules.toml to enforce quality gates"
          fi

      - name: Summary
        if: always()
        run: |
          echo "## PMAT TDG Quality Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: ${{ steps.tdg-check.outputs.status }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Baseline Score**: 95.2 (A+ grade)" >> $GITHUB_STEP_SUMMARY
          echo "- **Files Analyzed**: 14" >> $GITHUB_STEP_SUMMARY
          echo "- **Mode**: Warning" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "See `.pmat/tdg-rules.toml` for configuration" >> $GITHUB_STEP_SUMMARY
