// Stage 0: Token Definitions - Core Types for Bootstrap Lexer (Minimal Stub)
//
// This is a minimal working stub to validate the infrastructure.
// Full implementation will be completed in BOOTSTRAP-001 through BOOTSTRAP-004.

fun main() {
    println("Stage 0: Token definitions");
    demonstrate_tokens();
}

fun demonstrate_tokens() {
    // Minimal token demonstration
    let keywords = vec!["fun", "let", "if", "else", "return"];
    let operators = vec!["+", "-", "*", "/", "=", "=="];
    let delimiters = vec!["(", ")", "{", "}", ";", ","];
    
    println("Core token types for bootstrap:");
    
    println("Keywords:");
    for keyword in keywords {
        println("  {}", keyword);
    }
    
    println("Operators:");
    for op in operators {
        println("  {}", op);
    }
    
    println("Delimiters:");
    for delim in delimiters {
        println("  {}", delim);
    }
}

// Token classification functions
fun is_keyword(text: String) -> Bool {
    let keywords = vec!["fun", "let", "if", "else", "return"];
    keywords.contains(&text)
}

fun is_operator(text: String) -> Bool {
    let operators = vec!["+", "-", "*", "/", "=", "=="];
    operators.contains(&text)
}